não esta registrando no bando de dados ao fazer a rota. 

rota /api/users/register
body: 
{
  "cpf": "06094303601",
  "fullName": "Luis Carlos da Silva Dias",
  "email": "luisdias04@hotmail.com",
  "password": "235689"
}

o meu arquivo User model é:

const { DataTypes } = require('sequelize');
const bcrypt = require('bcryptjs');
const db = require('../config/db');

const User = db.define('User', {
  id: {
    type: DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true,
  },
  cpf: {
    type: DataTypes.STRING(11),
    unique: true,
    allowNull: false,
    validate: {
      isNumeric: true,
      len: [11, 11],
    },
  },
  fullName: {
    type: DataTypes.STRING(100),
    allowNull: false,
  },
  email: {
    type: DataTypes.STRING(100),
    allowNull: false,
    unique: true,
    validate: {
      isEmail: true,
    },
  },
  password: {
    type: DataTypes.STRING(255),
    allowNull: false,
  },
  registrationDate: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
  },
}, {
  tableName: 'User',
  timestamps: false,
  freezeTableName: true,
});

// Hook para criptografar a senha antes de criar um usuário
User.beforeCreate(async (user, options) => {
  if (user.password) {
    user.password = await bcrypt.hash(user.password, 10);
  }
});

module.exports = User;

O meu controller NewUserController.js é:
const bcrypt = require('bcryptjs');
const User = require('../models/User');

module.exports = {
  async register(req, res) {
    const { cpf, fullName, email, password } = req.body;

    try {
      // Verifica se o usuário já existe pelo CPF ou email
      const existingUser = await User.findOne({ where: { cpf } });
      if (existingUser) {
        return res.status(400).json({ message: 'Usuário já existe com este CPF' });
      }

      // Criptografar a senha
      const hashedPassword = await bcrypt.hash(password, 10);

      // Criar um novo usuário
      const user = await User.create({
        cpf,
        fullName,
        email,
        password: hashedPassword, // Salva a senha criptografada
      });

      return res.status(201).json({
        message: 'Usuário criado com sucesso',
        userId: user.id,
      });
    } catch (error) {
      console.error('❌ Erro ao cadastrar usuário:', error);
      return res.status(500).json({ message: 'Erro no servidor' });
    }
  },
};

O meu arquivo de rota NewUserRotes é:

const express = require('express');
const NewUserController = require('../controllers/NewUserController');
const validateUser = require('../middlewares/validateUser'); // Validação opcional

const router = express.Router();

// Rota para criar um novo usuário
router.post('/register', validateUser, NewUserController.register);

module.exports = router;

e o meu arquivo app é:

const express = require('express');
const userRoutes = require('./routes/userRoutes');
const shiftRoutes = require('./routes/shiftRoutes');
const authRoutes = require('./routes/authRoutes');
const errorHandler = require('./middlewares/errorHandler');
const homeRoutes = require('./routes/homeRoutes'); // Nome correto
const NewUserRoutes = require('./routes/NewUserRouter');

const app = express();

// Middleware para tratar JSON
app.use(express.json());

// Rotas
app.use('/', homeRoutes);
app.use('/api/auth', authRoutes);
app.use('/api/users', userRoutes);
app.use('/api/shifts', shiftRoutes);
app.use('/api/users', NewUserRoutes);

// Middleware de tratamento de erros
app.use(errorHandler);

module.exports = app;


TUdo pareque que funciona porem não registra no banco de dados, ao fazer o post. mostrar somente as linhas e arquivos que deverá ser mudado para não quebrar outras funcionalidade. 